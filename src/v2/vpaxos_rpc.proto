syntax = "proto3";

package vpaxos_rpc;

service VPaxos {
  rpc RpcPing (Ping) returns (PingReply) {}
  rpc RpcPropose(Propose) returns (ProposeReply) {}
  rpc RpcPrepare(Prepare) returns (PrepareReply) {}
  rpc RpcAccept(Accept) returns (AcceptReply) {}
  rpc RpcLearn(Learn) returns (LearnReply) {}
}

message Ping {
  string msg = 1;
  string address = 2;
}

message PingReply {
  string msg = 1;
  string address = 2;
}

message Propose {
  string value = 1;
}

message ProposeReply {
  int32 code = 1;
  string msg = 2;
  string chosen_value = 3;
  Ballot ballot = 4;
}

message Ballot {
  uint64 proposal_id = 1;
  uint64 node_id = 2;
}

message Prepare {
  Ballot ballot = 1;

  string address = 2;
  uint64 async_flag = 3;
}

message PrepareReply {
  Ballot promised_ballot = 1;
  Ballot accepted_ballot = 2;
  string accepted_value = 3;

  string address = 4;
  uint64 async_flag = 5;
}

message Accept {
  Ballot ballot = 1;
  string value = 2;

  string address = 3;
  uint64 async_flag = 4;
}

message AcceptReply {
  Ballot accepted_ballot = 1;
  string accepted_value = 2;

  string address = 3;
  uint64 async_flag = 4;
}

message Learn {
  string chosen_value = 1;
  string address = 2;
}

message LearnReply {
  string msg = 1;
  string address = 2;
}

